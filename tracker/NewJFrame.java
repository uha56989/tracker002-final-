import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import java.io.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author t0909
 */
public class NewJFrame extends javax.swing.JFrame {
    ArrayList<Match> mh = new ArrayList<Match>();
    private int match_number=1;
    String header[] = new String[]{"Match", "Time", "Map","Agent","Kill","Death","Assistaance","ADR"};
    DefaultTableModel dtm;
    

    

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        dtm = new DefaultTableModel(header,0);
        jTable1.setModel(dtm);
    }   
    DefaultTableModel tableModel = new DefaultTableModel() {

    @Override
    public boolean isCellEditable(int row, int column) {
       //all cells false
       return false;
    }
};
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField3 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 650));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(23, 46, 61));
        jPanel2.setPreferredSize(new java.awt.Dimension(120, 510));

        jPanel3.setBackground(new java.awt.Color(23, 35, 90));
        jPanel3.setToolTipText("");
        jPanel3.setName(""); // NOI18N
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 12, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButton1.setBackground(new java.awt.Color(23, 35, 90));
        jButton1.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Add");
        jButton1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(23, 35, 90));
        jPanel4.setPreferredSize(new java.awt.Dimension(100, 100));

        jPanel8.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 12, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButton2.setBackground(new java.awt.Color(23, 35, 90));
        jButton2.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Delete");
        jButton2.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel5.setBackground(new java.awt.Color(23, 35, 90));

        jPanel9.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 12, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton3.setBackground(new java.awt.Color(23, 35, 90));
        jButton3.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Read");
        jButton3.setToolTipText("");
        jButton3.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel6.setBackground(new java.awt.Color(23, 35, 90));

        jPanel10.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 12, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton4.setBackground(new java.awt.Color(23, 35, 90));
        jButton4.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Update");
        jButton4.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton5.setBackground(new java.awt.Color(23, 35, 90));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Export");
        jButton5.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton6.setBackground(new java.awt.Color(23, 35, 90));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Import");
        jButton6.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });


        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );


        jPanel1.setBackground(new java.awt.Color(71, 120, 197));
        jPanel1.setPreferredSize(new java.awt.Dimension(460, 90));

        jLabel1.setBackground(new java.awt.Color(154, 210, 200));
        jLabel1.setFont(new java.awt.Font("Bernard MT Condensed", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Valorant tracker");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );

        jPanel11.setBackground(new java.awt.Color(214, 255, 255));
        jPanel11.setLayout(new java.awt.GridLayout(3, 4));

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(214, 255, 255));
        jTextField1.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jTextField1.setText("Map:");
        jTextField1.setToolTipText("");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel11.add(jTextField1);

        jComboBox1.setBackground(new java.awt.Color(214, 255, 255));
        jComboBox1.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Map", "Bind", "Icebox", "Haven", "Breeze", "Fracture", "Split", "Ascent" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel11.add(jComboBox1);

        jTextField3.setEditable(false);
        jTextField3.setBackground(new java.awt.Color(214, 255, 255));
        jTextField3.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jTextField3.setText("Kill:");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jPanel11.add(jTextField3);

        jTextField6.setBackground(new java.awt.Color(214, 255, 255));
        jTextField6.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        jPanel11.add(jTextField6);

        jTextField7.setEditable(false);
        jTextField7.setBackground(new java.awt.Color(214, 255, 255));
        jTextField7.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jTextField7.setText("Agent:");
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        jPanel11.add(jTextField7);

        jComboBox2.setBackground(new java.awt.Color(214, 255, 255));
        jComboBox2.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Agent", "Jett", "Raze", "Reyna", "Pheonix", "Yoru", "Neon", "Sova", "Fade", "KayO", "Breach", "Skye", "Viper", "Omen", "Astra", "Brimstone", "Sage", "Cypher", "Killjoy", "Chamber" }));
        jPanel11.add(jComboBox2);
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jTextField4.setEditable(false);
        jTextField4.setBackground(new java.awt.Color(214, 255, 255));
        jTextField4.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jTextField4.setText("Death:");
        jPanel11.add(jTextField4);

        jTextField5.setBackground(new java.awt.Color(214, 255, 255));
        jTextField5.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jPanel11.add(jTextField5);

        jTextField8.setEditable(false);
        jTextField8.setBackground(new java.awt.Color(214, 255, 255));
        jTextField8.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jTextField8.setText("ADR:");
        jPanel11.add(jTextField8);

        jTextField9.setBackground(new java.awt.Color(214, 255, 255));
        jTextField9.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jPanel11.add(jTextField9);
        


        jTextField11.setEditable(false);
        jTextField11.setBackground(new java.awt.Color(214, 255, 255));
        jTextField11.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jTextField11.setText("Assistance:");
        jPanel11.add(jTextField11);

        jTextField12.setBackground(new java.awt.Color(214, 255, 255));
        jTextField12.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jPanel11.add(jTextField12);

        jTable1.setModel(tableModel);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Match ", "Time", "Map", "Agent", "Kill", "Death", "Assistance", "ADR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
    }     
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        String filePath = "C:\\Users\\t0909\\OneDrive\\桌面\\java\\vscode\\.vscode\\tracker\\text.txt";
        File file = new File(filePath);
        try {
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            
            for(int i = 0; i < jTable1.getRowCount(); i++){//rows
                for(int j = 0; j < jTable1.getColumnCount(); j++){//columns
                    bw.write(jTable1.getValueAt(i, j).toString()+" ");
                }
                bw.newLine();
            }
            bw.close();
            fw.close();
            
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }         
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        String filePath = "C:\\Users\\t0909\\OneDrive\\桌面\\java\\vscode\\.vscode\\tracker\\text.txt";
        File file = new File(filePath);
        
        try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            Object[] lines = br.lines().toArray();
            
            for(int i = 0; i < lines.length; i++){
                String[] row = lines[i].toString().split(" ");
                model.addRow(row);
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                             

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        boolean result1 = true;
        String input1;
        while(result1){
            input1 = jTextField6.getText();
            try {
                if(Integer.parseInt(input1)<0){
                    throw new IllegalArgumentException("擊殺人數不可小於0");
                }
                if(Integer.parseInt(input1)>= 100) //判斷使用者輸入字串之長度是否符合規定
          
                    throw new IllegalArgumentException("擊殺人數不可超過100");
                if(input1.matches(".*[a-z].*")){
                    throw new IllegalArgumentException("擊殺人數不可有英文");
                }
                if(input1.matches(" *")){
                    throw new IllegalArgumentException("擊殺人數不可只有空格");
                }
                
                result1=false;
          
              } catch (IllegalArgumentException e) {
          
                JOptionPane.showMessageDialog(null, e.getMessage());
                jTextField6.setText("0");
                JOptionPane.showMessageDialog(null, "請重新輸入");
                jComboBox2.setSelectedIndex(0);
          
              } 

        }
        boolean result2 = true;
        String input2;
        while(result2){
            input2 = jTextField5.getText();
            try {
                if(Integer.parseInt(input2)<0){
                    throw new IllegalArgumentException("死亡數不可小於0");
                }
                if(Integer.parseInt(input2)>= 100) //判斷使用者輸入字串之長度是否符合規定
          
                    throw new IllegalArgumentException("死亡數不可超過100");
                if(input2.matches(".*[a-z].*")){
                    throw new IllegalArgumentException("死亡數不可有英文");
                }
                if(input2.matches(" *")){
                    throw new IllegalArgumentException("死亡數不可只有空格");
                }
                
                result2=false;
          
              } catch (IllegalArgumentException e) {
          
                JOptionPane.showMessageDialog(null, e.getMessage());
                jTextField5.setText("0");
                JOptionPane.showMessageDialog(null, "請重新輸入");
                jComboBox2.setSelectedIndex(0);
              } 

        }
        boolean result3 = true;
        String input3;
        while(result3){
            input3 = jTextField12.getText();
            try {
                if(Integer.parseInt(input3)<0){
                    throw new IllegalArgumentException("助攻數不可小於0");
                }
                if(Integer.parseInt(input3)>= 100) //判斷使用者輸入字串之長度是否符合規定
          
                    throw new IllegalArgumentException("助攻數不可超過100");
                if(input3.matches(".*[a-z].*")){
                    throw new IllegalArgumentException("助攻數不可有英文");
                }
                if(input3.matches(" *")){
                    throw new IllegalArgumentException("助攻數不可只有空格");
                }
                
                result3=false;
          
              } catch (IllegalArgumentException e) {
          
                JOptionPane.showMessageDialog(null, e.getMessage());
                jTextField12.setText("0");
                JOptionPane.showMessageDialog(null, "請重新輸入");
                jComboBox2.setSelectedIndex(0);
              } 

        }
        boolean result4 = true;
        String input4;
        while(result4){
            input4 = jTextField9.getText();
            try {
                if(Integer.parseInt(input4)<0){
                    throw new IllegalArgumentException("均傷不可小於0");
                }
                if(Integer.parseInt(input4)>= 1000) //判斷使用者輸入字串之長度是否符合規定
          
                    throw new IllegalArgumentException("均傷不可超過1000");
                if(input4.matches(".*[a-z].*")){
                    throw new IllegalArgumentException("均傷不可有英文");
                }
                if(input4.matches(" *")){
                    throw new IllegalArgumentException("均傷不可只有空格");
                }
                
                result4=false;
          
              } catch (IllegalArgumentException e) {
          
                JOptionPane.showMessageDialog(null, e.getMessage());
                jTextField9.setText("0");
                JOptionPane.showMessageDialog(null, "請重新輸入");
                jComboBox2.setSelectedIndex(0);
              } 

        }
        if(jComboBox2.getSelectedIndex()==1){
            Jett a = new Jett();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Jett",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==2){
            Raze a = new Raze();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Raze",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==3){
            Reyna a = new Reyna();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Reyna",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==4){
            Pheonix a = new Pheonix();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Pheonix",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==5){
            Yoru a = new Yoru();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Yoru",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==6){
            Neon a = new Neon();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Neon",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==7){
            Sova a = new Sova();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Sova",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==8){
            Fade a = new Fade();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Fade",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==9){
            KayO a = new KayO();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"KayO",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==10){
            Breach a = new Breach();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Breach",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }else if(jComboBox2.getSelectedIndex()==11){
            Skye a = new Skye();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Skye",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==12){
            Viper a = new Viper();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Viper",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==13){
            Omen a = new Omen();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Omen",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==14){
            Astra a = new Astra();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Astra",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==15){
            Brimstone a = new Brimstone();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Brimstone",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==16){
            Sage a = new Sage();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Sage",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==17){
            Cypher a = new Cypher();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Cypher",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==18){
            Killjoy a = new Killjoy();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Killjoy",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==19){
            Chamber a = new Chamber();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            mh.add(m);
            match_number+=1;
            Object[] objs = {m.getMN(),m.getTime(),jComboBox1.getSelectedItem().toString(),"Chamber",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        
    }                
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        boolean result = true;
        String input;
        while(result){
            input = JOptionPane.showInputDialog("請輸入要搜尋的場次編號: ");
            try {
                if(input.length() > 5) //判斷使用者輸入字串之長度是否符合規定
          
                    throw new IllegalArgumentException("場次編號長度不可超過5");
                if(input.matches(".*[a-z].*")){
                    throw new IllegalArgumentException("場次編號不可是英文");
                }
                if(input.matches(" *")){
                    throw new IllegalArgumentException("場次編號不可只有空格");
                }
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==Integer.parseInt(input)){
                        JOptionPane.showMessageDialog(null,mh.get(i).getInfo());
                        
                    }
                    else if(mh.get(i).getMN()==mh.size()&mh.get(i).getMN()!=Integer.parseInt(input)){
                        JOptionPane.showMessageDialog(null,"資料不存在");
                    }
                }
                
                
                
                
                result=false;
          
              } catch (IllegalArgumentException e) {
          
                JOptionPane.showMessageDialog(null, e.getMessage());
                JOptionPane.showMessageDialog(null, "請重新輸入");
          
              } 

        }
   
       
    }    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        if(jComboBox2.getSelectedIndex()==1){
        Jett a = new Jett();
        a.setKill(Integer.parseInt(jTextField6.getText()));
        a.setDeath(Integer.parseInt(jTextField5.getText()));
        a.setAssistance(Integer.parseInt(jTextField12.getText()));
        a.setDR(Double.parseDouble(jTextField9.getText()));
        Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
        int row = jTable1.getSelectedRow();
        dtm.removeRow(row);
            for(int i=0;i<mh.size();i++){
                if(mh.get(i).getMN()==row){
                    mh.remove(i);
                    mh.add(m);
                }
            }
        Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Jett",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
        dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==2){
            Raze a = new Raze();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Raze",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==3){
            Reyna a = new Reyna();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Reyna",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==4){
            Pheonix a = new Pheonix();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Pheonix",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==5){
            Yoru a = new Yoru();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Yoru",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==6){
            Neon a = new Neon();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Neon",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==7){
            Sova a = new Sova();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Sova",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==8){
            Fade a = new Fade();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Fade",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==9){
            KayO a = new KayO();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"KayO",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==10){
            Breach a = new Breach();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Breach",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==11){
            Skye a = new Skye();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Skye",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==12){
            Viper a = new Viper();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Viper",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==13){
            Omen a = new Omen();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Omen",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==14){
            Astra a = new Astra();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Astra",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==15){
            Brimstone a = new Brimstone();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Brimstone",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==16){
            Sage a = new Sage();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Sage",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==17){
            Cypher a = new Cypher();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Cypher",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==18){
            Killjoy a = new Killjoy();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Killjoy",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        else if(jComboBox2.getSelectedIndex()==19){
            Chamber a = new Chamber();
            a.setKill(Integer.parseInt(jTextField6.getText()));
            a.setDeath(Integer.parseInt(jTextField5.getText()));
            a.setAssistance(Integer.parseInt(jTextField12.getText()));
            a.setDR(Double.parseDouble(jTextField9.getText()));
            Match m = new Match(a,jComboBox1.getSelectedItem().toString(),match_number);
            int row = jTable1.getSelectedRow();
            dtm.removeRow(row);
                for(int i=0;i<mh.size();i++){
                    if(mh.get(i).getMN()==row){
                        mh.remove(i);
                        mh.add(m);
                    }
                }
            Object[] objs = {m.getMN()-1,m.getTime(),jComboBox1.getSelectedItem().toString(),"Chamber",a.getKill(),a.getDeath(),a.getAssistance(),a.getDR()};
            dtm.addRow(objs);
        }
        
    }                              

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        dtm.removeRow(row);
        for(int i=0;i<mh.size();i++){
            if(mh.get(i).getMN()==row){
                mh.remove(i);
            }
        }
        
    }                                        

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        
    }                                           

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        if(jComboBox1.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null, "Please select map");
        }
    }   
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        if(jComboBox2.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null, "Please select agent");
        }
    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration    
    
    

    
}
